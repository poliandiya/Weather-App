{"version":3,"sources":["components/Form.jsx","components/Weather.jsx","App.js","index.js"],"names":["Form","props","className","onSubmit","loadWeather","error","type","name","autoComplete","placeholder","role","Weather","city","weatherIcon","temp_celsius","minMaxTemp","temp_min","temp_max","description","min","max","BASE_URL","API_KEY","App","state","country","icon","main","undefined","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","getWeatherIcon","ID","setState","calcCelsius","temp","Math","floor","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","weather","id","sys","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76906d1c.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Form = (props) => {\n  return (\n    <div className=\"Form\">\n      <form onSubmit={props.loadWeather}>\n        <div>{props.error ? error() : \"\"}</div>\n        <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"City\" />\n        <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Country\" />\n        <button type=\"submit\" className=\"btn\">Get Weather</button>\n      </form>\n    </div>\n  );\n};\n\nconst error = () => {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      Please Enter City and Country\n    </div>\n\n  );\n};","import React from 'react';\n\nexport const Weather = (props) => {\n  return (\n    <div className=\"Weather\">\n      <h1>{props.city}</h1>\n      <i className={`wi ${props.weatherIcon}`}></i>\n      {props.temp_celsius ? (<h1>{props.temp_celsius}&deg;</h1>) : null}\n      {minMaxTemp(props.temp_min, props.temp_max)}\n      <h4>{props.description}</h4>\n    </div>\n  );\n};\n\nfunction minMaxTemp(min, max) {\n  if (min && max) {\n    return (\n      <h3>\n        <span>{min}&deg;</span>\n        <span>{max}&deg;</span>\n      </h3>\n    );\n  }\n};\n","import React from 'react';\nimport { Form } from './components/Form.jsx';\nimport { Weather } from './components/Weather.jsx';\n\nimport \"weather-icons/css/weather-icons.css\";\nimport './App.css';\n\nconst BASE_URL = 'http://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = '3ce3d19e821ae1cfed5238064639d347';\n\nclass App extends React.Component {\n  state = {\n    city: \"\",\n    country: \"\",\n    icon: \"\",\n    main: undefined,\n    temp_celsius: 0,\n    temp_max: 0,\n    temp_min: 0,\n    description: \"\",\n    error: \"\",\n  };\n\n  weatherIcon = {\n    Thunderstorm: \"wi-thunderstorm\",\n    Drizzle: \"wi-sleet\",\n    Rain: \"wi-storm-shower\",\n    Snow: \"wi-snow\",\n    Atmosphere: \"wi-fog\",\n    Clear: \"wi-day-sunny\",\n    Clouds: \"wi-day-fog\",\n  };\n\n  getWeatherIcon = (icon, ID) => {\n    switch (true) {\n      case ID >= 200 && ID <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n      case ID >= 300 && ID <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n      case ID >= 500 && ID <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n      case ID >= 600 && ID <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n      case ID >= 701 && ID <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n      case ID === 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n      case ID >= 801 && ID <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    };\n  };\n\n  calcCelsius = (temp) => {\n    return Math.floor(temp - 273.15);\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(`${BASE_URL}?q=${city},${country}&appid=${API_KEY}`);\n      const response = await api_call.json();\n\n      this.getWeatherIcon(this.weatherIcon, response.weather[0].id)\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        temp_celsius: this.calcCelsius(response.main.temp),\n        temp_max: this.calcCelsius(response.main.temp_max),\n        temp_min: this.calcCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false,\n      });\n    } else {\n      this.setState({ error: true });\n    }\n  }\n\n  render() {\n    const { city, temp_celsius, temp_max, temp_min, description, icon, error } = this.state;\n    return (\n      <div className=\"App\">\n        <Form\n          loadWeather={this.getWeather}\n          error={error}\n        />\n        <Weather\n          city={city}\n          temp_celsius={temp_celsius}\n          temp_max={temp_max}\n          temp_min={temp_min}\n          description={description}\n          weatherIcon={icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}